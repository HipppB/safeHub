version: '3.9'
services:
  nginx:
    build:
      context: docker/development
      dockerfile: nginx/Dockerfile
    environment:
      SERVER_NAME: ${DOMAIN_NAME}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src:/app/src
      - ./node_modules:/app/node_modules
      - ./vendor:/app/vendor
      - ./composer.json:/app/composer.json
    depends_on:
      - php-fpm
    networks:
        - default

  php-fpm:
    build:
      context: .
      dockerfile: docker/development/php-fpm/Dockerfile
    environment:
      PHP_IDE_CONFIG: serverName=${DOMAIN_NAME}
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
        - default
# Uncomment to create vendor and fill db on host machine
  php-cli:
    build:
      context: .
      dockerfile: docker/development/php-cli/Dockerfile
    volumes:
      - .:/app
      - ./vendor:/app/vendor
    depends_on:
      - mysql
    networks:
        - default

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./var/database:/var/lib/mysql:rw
    networks:
      - default

  phpmyadmin:
    image: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
        - default

volumes:
  var:
  vendor:

networks:
  default:
    driver: bridge
